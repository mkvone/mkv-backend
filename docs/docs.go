// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chains": {
            "get": {
                "description": "Get chains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chains"
                ],
                "summary": "Get chains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/config.ChainConfig"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/endpoints": {
            "get": {
                "description": "Get endpoints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "endpoints"
                ],
                "summary": "Get endpoints",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/server.Endpoints"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/snapshot/{chain}": {
            "get": {
                "description": "Get snapshot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snapshots"
                ],
                "summary": "Get snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain ID",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/server.Snapshots"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/snapshots": {
            "get": {
                "description": "Get snapshots",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snapshots"
                ],
                "summary": "Get snapshots",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/server.Snapshots"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Get stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/server.Stats"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/validator/{chain}": {
            "get": {
                "description": "Get validator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "validators"
                ],
                "summary": "Get validator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain ID",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/server.Validator"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/validators": {
            "get": {
                "description": "Get validators",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "validators"
                ],
                "summary": "Get validators",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/server.ValidatorResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.Block": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "config.ChainConfig": {
            "type": "object",
            "properties": {
                "appname": {
                    "type": "string"
                },
                "block": {
                    "$ref": "#/definitions/config.Block"
                },
                "chainID": {
                    "type": "string"
                },
                "cosmosSDK": {
                    "type": "string"
                },
                "endpoints": {
                    "$ref": "#/definitions/config.Endpoints"
                },
                "goVersion": {
                    "type": "string"
                },
                "imgURL": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "snapshot": {
                    "$ref": "#/definitions/config.Snapshot"
                },
                "symbol": {
                    "$ref": "#/definitions/config.Symbol"
                },
                "validator": {
                    "$ref": "#/definitions/config.Validator"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "config.Commission": {
            "type": "object",
            "properties": {
                "maxChangeRate": {
                    "type": "string"
                },
                "maxRate": {
                    "type": "string"
                },
                "rate": {
                    "type": "string"
                }
            }
        },
        "config.ConsensusPubkey": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "config.Description": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "config.Endpoints": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "string"
                },
                "grpc": {
                    "type": "string"
                },
                "rpc": {
                    "type": "string"
                }
            }
        },
        "config.File": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "config.Snapshot": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.File"
                    }
                },
                "snapshotURL": {
                    "type": "string"
                }
            }
        },
        "config.Symbol": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number"
                },
                "ticker": {
                    "type": "string"
                }
            }
        },
        "config.Uptime": {
            "type": "object",
            "properties": {
                "missedBlock": {
                    "type": "integer"
                },
                "percent": {
                    "type": "number"
                },
                "tombstoned": {
                    "type": "boolean"
                },
                "totalBlock": {
                    "type": "integer"
                }
            }
        },
        "config.Validator": {
            "type": "object",
            "properties": {
                "commission": {
                    "$ref": "#/definitions/config.Commission"
                },
                "consensusPubkey": {
                    "$ref": "#/definitions/config.ConsensusPubkey"
                },
                "delegatorShares": {
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/config.Description"
                },
                "enable": {
                    "type": "boolean"
                },
                "jailed": {
                    "type": "boolean"
                },
                "operatorAddr": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tokens": {
                    "type": "string"
                },
                "totalDelegationCounts": {
                    "type": "string"
                },
                "uptime": {
                    "$ref": "#/definitions/config.Uptime"
                },
                "valconAddress": {
                    "type": "string"
                },
                "votingPower": {
                    "type": "integer"
                },
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "server.APIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "description": "omitempty를 사용하여 데이터가 없는 경우 필드를 생략"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.Commission": {
            "type": "object",
            "properties": {
                "max_change_rate": {
                    "type": "string"
                },
                "max_rate": {
                    "type": "string"
                },
                "rate": {
                    "type": "string"
                }
            }
        },
        "server.Description": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "server.Endpoints": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "string"
                },
                "grpc": {
                    "type": "string"
                },
                "img_url": {
                    "type": "string"
                },
                "name": {
                    "description": "Chains []struct {",
                    "type": "string"
                },
                "rest_api": {
                    "type": "string"
                },
                "rpc": {
                    "type": "string"
                }
            }
        },
        "server.Snapshots": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string"
                },
                "base_url": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.File"
                    }
                },
                "go_version": {
                    "type": "string"
                },
                "img_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "server.Stats": {
            "type": "object",
            "properties": {
                "chains_operating": {
                    "type": "integer"
                },
                "delegators": {
                    "type": "integer"
                },
                "staked_value_avg": {
                    "type": "number"
                },
                "uptime_avg": {
                    "type": "number"
                }
            }
        },
        "server.Uptime": {
            "type": "object",
            "properties": {
                "missed_block": {
                    "type": "integer"
                },
                "percent": {
                    "type": "number"
                },
                "tombstoned": {
                    "type": "boolean"
                },
                "total_block": {
                    "type": "integer"
                }
            }
        },
        "server.Validator": {
            "type": "object",
            "properties": {
                "commission": {
                    "$ref": "#/definitions/server.Commission"
                },
                "delegator_shares": {
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/server.Description"
                },
                "jailed": {
                    "type": "boolean"
                },
                "operator_addr": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tokens": {
                    "type": "string"
                },
                "total_delegation_counts": {
                    "type": "string"
                },
                "uptime": {
                    "$ref": "#/definitions/server.Uptime"
                },
                "valcon_address": {
                    "type": "string"
                },
                "voting_power": {},
                "wallet_address": {
                    "type": "string"
                }
            }
        },
        "server.ValidatorResponse": {
            "type": "object",
            "properties": {
                "block_height": {
                    "type": "string"
                },
                "block_time": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "ticker": {
                    "type": "string"
                },
                "validator": {
                    "$ref": "#/definitions/server.Validator"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
